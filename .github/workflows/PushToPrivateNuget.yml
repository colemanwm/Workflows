name: 'Build, Pack, Push'
on:
  workflow_call:
    inputs:
      ProjectName:
        required: true
        type: string
      ProjectFolder:
        required: true
        type: string
      Version:
        required: false
        type: string
    secrets:
      NUGET_TOKEN:
        required: true
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
jobs:
  build-push:
    runs-on: ubuntu-latest
    environment: Nuget
    env:
        CONFIG : Release
        NUGET_URL: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        NUGET_TOKEN : ${{ secrets.NUGET_TOKEN }}
        USERNAME : someusername
        PROJECT : "${{ inputs.ProjectName }}"
        PROJECT_FOLDER : "${{ inputs.ProjectFolder }}"
        VERSION : "${{ inputs.Version }}"
        PRERELEASE : ${{ contains(github.ref_name, 'beta') }}
    steps:
      -
        id: GetVersionCode
        run:
          #UnformattedVersionCode=${"${{ env.VERSION }}"/v/t}
          #echo {VersionCodeFormatted}=1.0.0 >> $GITHUB_ENV
          echo "FormattedCode=${{ env.VERSION }}" | sed -e "s/v//" >> "$GITHUB_ENV"
          echo "FormattedProject=${{ env.PROJECT }}" | sed -e "s/ //" | sed -e "s/.csproj//" >> "$GITHUB_ENV"
      -
        name: Checkout Dashboard
        uses: actions/checkout@v2
      -
        name: Build
        run: |
          dotnet nuget add source --username ${{env.USERNAME}} --password ${{ env.NUGET_TOKEN }} --store-password-in-clear-text --name github ${{env.NUGET_URL}}
          dotnet build "${{ env.PROJECT_FOLDER }}/${{ env.PROJECT }}" --configuration ${{ env.CONFIG }}
          # dotnet build \
          #  /p:Version=${{ env.FormattedCode }}
           # "${{ env.PROJECT_FOLDER }}/${{ env.PROJECT }}" \
           # --configuration ${{ env.CONFIG }}
      -
        name: NuGet Pack
        run: |
          dotnet pack "${{ env.PROJECT_FOLDER }}/${{ env.PROJECT }}" \
              /p:PackageId=${{ env.FormattedProject }} \
              --configuration ${{ env.CONFIG }} \
              --no-build \
              --version-suffix ${{ env.FormattedCode }}
      -
        name: NuGet Push
        run: |
            dotnet nuget push "${{ env.PROJECT_FOLDER }}/bin/Release/*.nupkg" \
              --source ${{ env.NUGET_URL }} \
              --api-key ${{ env.NUGET_TOKEN }} \
              --skip-duplicate
            dotnet nuget push "${{ env.PROJECT_FOLDER }}/bin/Release/*.snupkg" \
              --source ${{ env.NUGET_URL }} \
              --api-key ${{ env.NUGET_TOKEN }} \
              --skip-duplicate
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "${{ github.ref_name }}"
          prerelease: ${{ env.PRERELEASE }}
